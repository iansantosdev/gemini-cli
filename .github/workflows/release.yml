name: Build and Publish Gemini CLI

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Get latest Gemini CLI release version
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s "https://api.github.com/repos/google-gemini/gemini-cli/releases/latest" | grep -Po '"tag_name": "v\K[0-9.]+')
          if [ -z "$LATEST_TAG" ]; then
            echo "Could not find latest release tag."
            exit 1
          fi
          echo "Latest release tag is $LATEST_TAG"
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image already exists
        id: check_image
        run: |
          docker manifest inspect ghcr.io/iansantosdev/gemini-cli:${{ steps.get_latest_release.outputs.version }}
        continue-on-error: true

      - name: Build and push Docker image
        if: steps.check_image.outcome == 'failure'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/iansantosdev/gemini-cli:${{ steps.get_latest_release.outputs.version }}
            ghcr.io/iansantosdev/gemini-cli:latest
          build-args: |
            GEMINI_VERSION=${{ steps.get_latest_release.outputs.version }}

      - name: Image already exists
        if: steps.check_image.outcome != 'failure'
        run: echo "Image with tag ${{ steps.get_latest_release.outputs.version }} already exists. Skipping build."
