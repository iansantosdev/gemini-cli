name: Build and Publish Gemini CLI

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Get latest Gemini CLI release version
        id: get_latest_release
        run: |
          GITHUB_RELEASE_JSON=$(curl -s "https://api.github.com/repos/google-gemini/gemini-cli/releases/latest")
          LATEST_VERSION_TAG=$(echo "$GITHUB_RELEASE_JSON" | grep -Po '"tag_name": "\K[^"]+')
          if [ -z "$LATEST_VERSION_TAG" ]; then
            echo "Could not find latest release tag."
            exit 1
          fi
          SEMANTIC_VERSION_TAG=$(echo "$LATEST_VERSION_TAG" | grep -Po '^v\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "Release tag: $LATEST_VERSION_TAG"
          echo "Semantic tag: $SEMANTIC_VERSION_TAG"
          echo "latest_version_tag=$LATEST_VERSION_TAG" >> $GITHUB_OUTPUT
          echo "semantic_version_tag=$SEMANTIC_VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image needs to be updated
        id: check_image
        run: |
          IMAGE_NEEDS_UPDATE="true"
          IMAGE="ghcr.io/iansantosdev/gemini-cli:${{ steps.get_latest_release.outputs.semantic_version_tag }}"

          echo "Checking if image $IMAGE exists and is up-to-date..."
          DOCKER_MANIFEST=$(skopeo inspect "docker://$IMAGE" 2>/dev/null || echo "")

          if [ -n "$DOCKER_MANIFEST" ]; then
            CURRENT_IMAGE_VERSION=$(echo "$DOCKER_MANIFEST" | grep -Po '"org\.opencontainers\.image\.version":\s*"\K[^"]+' || echo "")

            echo "Found existing image with version: '${CURRENT_IMAGE_VERSION:-<none>}'"
            echo "Expected version: '${{ steps.get_latest_release.outputs.latest_version_tag }}'"

            if [ -n "$CURRENT_IMAGE_VERSION" ] && [ "$CURRENT_IMAGE_VERSION" = "${{ steps.get_latest_release.outputs.latest_version_tag }}" ]; then
              IMAGE_NEEDS_UPDATE="false"
              echo "âœ… Image is already up-to-date with release ${{ steps.get_latest_release.outputs.latest_version_tag }}. Skipping build."
            else
              echo "ðŸ”„ Image needs update. Building new image for release ${{ steps.get_latest_release.outputs.latest_version_tag }}."
            fi
          else
            echo "ðŸ†• Image does not exist. Building new image for release ${{ steps.get_latest_release.outputs.latest_version_tag }}."
          fi

          echo "needs_update=$IMAGE_NEEDS_UPDATE" >> $GITHUB_OUTPUT

      - name: Build and push image
        if: steps.check_image.outputs.needs_update == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/iansantosdev/gemini-cli:${{ steps.get_latest_release.outputs.semantic_version_tag }}
            ghcr.io/iansantosdev/gemini-cli:latest
          build-args: |
            GEMINI_VERSION=${{ steps.get_latest_release.outputs.latest_version_tag }}
          labels: |
            org.opencontainers.image.version=${{ steps.get_latest_release.outputs.latest_version_tag }}
